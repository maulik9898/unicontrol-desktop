name: "publish"

on:
  push:
    branches:
      - main

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Linux
          - os: "ubuntu-22.04"
            target: "x86_64-unknown-linux-gnu"
            arch: "x86_64"
          # Windows
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            arch: "x86_64"
          # macOs
          - os: "macos-latest"
            target: "aarch64-apple-darwin"
            # This is not true, but simplifies the logic of the action.
            arch: "x86_64"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - uses: ./.github/action/action
        with:
          arch: ${{ matrix.platform.arch }}
          features: ${{ matrix.platform.features }}
          target: ${{ matrix.platform.target }}
          runs_on: ${{ matrix.platform.os }}

      - name: Enable caching
        uses: Swatinem/rust-cache@v2

      - name: install brew (macos only)
        if: matrix.platform == 'macos-latest'
        uses: Homebrew/actions/setup-homebrew@master


      - name: install brew dependencies (macos only)
        if: matrix.platform == 'macos-latest'
        run: brew install libuv

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev musl-tools librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install # change this to npm or pnpm depending on which one you use

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
